apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: rhel-vm-medium-template
  title: RHEL VM Medium Template
  description: creates a RHEL VM Medium
  tags:
    - vm
    - workshop
spec:
  owner: tssc
  type: VM
  parameters:
    - title: Provide information for the VM
      required:
        - namespace
        - component_id
        - rhel_version
      properties:
        rhel_version:
          title: Select the RHEL version
          type: string
          description: The RHEL version for the VM
          default: 10
          enum:
            - '9'
            - '10'
          enumNames:
            - 'RHEL9'
            - 'RHEL10'
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          default: legacy-vm
          ui:field: EntityNamePicker
          maxLength: 23
        namespace:
          title: Namespace
          type: string
          description: Namespace of the component
          default: legacy-vm
          ui:field: EntityNamePicker
          maxLength: 23
  steps:
    - id: fetch-provision-data
      name: Fetch Provision Data
      action: catalog:fetch
      input:
        entityRef: component:default/provisioning-data

    - id: templateSource
      name: Generating the source code component
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: ./source
        values:
          rhel_version: ${{parameters.rhel_version}}
          owner: rhdh
          namespace: ${{parameters.namespace}}
          component_id: ${{parameters.component_id}}
          cluster_id: ${{ steps["fetch-provision-data"].output.entity.metadata.labels["ocp-apps-domain"] }}
          host: gitlab-gitlab.${{ steps["fetch-provision-data"].output.entity.metadata.labels["ocp-apps-domain"] }}
          repoName: ${{parameters.component_id}}
          user_id: rhdh
          destination: rhdh/${{ parameters.component_id }}
    - id: publishSource
      name: Publish
      action: publish:gitlab
      input:
        sourcePath: ./source
        description: ${{parameters.description}}
        repoUrl: 'gitlab-gitlab.${{ steps["fetch-provision-data"].output.entity.metadata.labels["ocp-apps-domain"] }}?owner=rhdh&repo=${{parameters.component_id}}'
        repoVisibility: public    
    - id: registerSource
      name: Registering the Source Code Component
      action: catalog:register
      input:
        repoContentsUrl: ${{steps.publishSource.output.repoContentsUrl}}
        catalogInfoPath: /catalog-info.yaml
    - id: templateGitops
      name: Generating the deployment resources and artifacts
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          rhel_version: ${{parameters.rhel_version}}
          component_id: ${{parameters.component_id}}
          description: ${{parameters.description}}
          destination:  https://gitlab-gitlab.${{ steps["fetch-provision-data"].output.entity.metadata.labels["ocp-apps-domain"] }}/rhdh/${{parameters.component_id}}-gitops.git
          source_repository: https://gitlab-gitlab.${{ steps["fetch-provision-data"].output.entity.metadata.labels["ocp-apps-domain"] }}/rhdh/${{parameters.component_id}}.git
          repository_name: ${{parameters.component_id}}
          git_host: gitlab-gitlab.${{ steps["fetch-provision-data"].output.entity.metadata.labels["ocp-apps-domain"] }}
          cluster: ${{ steps["fetch-provision-data"].output.entity.metadata.labels["ocp-apps-domain"] }}
          namespace: ${{parameters.namespace}}
          user_id: rhdh
        targetPath: ./tenant-gitops
    - id: publishGitops
      name: Publishing to Deployment Resource Repository
      action: publish:gitlab
      input:
        repoUrl: gitlab-gitlab.${{ steps["fetch-provision-data"].output.entity.metadata.labels["ocp-apps-domain"] }}?owner=rhdh&repo=${{parameters.component_id}}-gitops
        title: gitops resources for ${{parameters.namespace}}-gitops
        description: gitops resources for ${{parameters.namespace}}-gitops
        sourcePath: ./tenant-gitops
        defaultBranch: main
        protectDefaultBranch: false
        repoVisibility: public
    - id: createArgoResources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{parameters.component_id}}-gitops
        argoInstance: cluster-argocd
        namespace: openshift-gitops
        repoUrl: https://gitlab-gitlab.${{ steps["fetch-provision-data"].output.entity.metadata.labels["ocp-apps-domain"] }}/rhdh/${{parameters.component_id}}-gitops.git
        path: 'argocd/'
  output:
    links:
      - title: Source Code Repository
        url: ${{steps.publishSource.output.remoteUrl}}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{steps.registerSource.output.entityRef}}
